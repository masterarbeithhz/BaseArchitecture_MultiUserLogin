#Definition Namespace für alle Ressourcen
apiVersion: v1
kind: Namespace
metadata:
  name: JSVAR_NAMESPACE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: login
  namespace: JSVAR_NAMESPACE
  labels:
    app: login
spec:
  replicas: 1
  selector:
    matchLabels:
      app: login
  template:
    metadata:
      labels:
        app: login
    spec:
      containers:
      - name: login
        image: JSVAR_DOCKERIMAGE
        env:
        - name: BA_CUSTOMER
          value: JSVAR_BA_CUSTOMER
        - name: BA_DBNAME
          value: JSVAR_BA_DBNAME
        - name: BA_DBUSER
          value: JSVAR_BA_DBUSER
        - name: BA_DBDB
          value: JSVAR_BA_DBDB
        - name: BA_DBPSWD
          value: JSVAR_BA_DBPSWD
        - name: BA_DOMAIN
          value: JSVAR_BA_DOMAIN
#        resources:
#          requests:
#            cpu: "100m"
#          limits:
#            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: login-service
  namespace: JSVAR_NAMESPACE
spec:
  type: NodePort
  selector:
    app: login
  ports:
  - protocol: TCP
    port: 80
#    targetPort: 80
---
#Definition Reverse-Proxy für einen Service
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: login-ingress
  namespace: JSVAR_NAMESPACE
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    #kubernetes.io/ingress.class: gce
spec:
  rules:
  - http:
      paths:
        - path: /JSVAR_NAMESPACE/login/(.*)
          backend:
            serviceName: login-service
            servicePort: 80



